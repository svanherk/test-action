name: 'UI Component CI'
description: 'CI for our front-end web components'
inputs:
  RUN_LOCAL_TESTS:
    description: 'Whether to run npm run test:local'
    default: false
  RUN_SAUCE_TESTS:
    description: 'Whether to run npm run test:sauce'
    default: false
  SAUCE_USERNAME:
    description: 'Sauce username'
  SAUCE_ACCESS_KEY:
    description: 'Sauce access key'
  RUN_BROWSERSTACK_TESTS:
    description: 'Whether to run npm run test:bs'
    default: false
  BROWSERSTACK_USERNAME:
    description: 'Browserstack username'
  BROWSERSTACK_ACCESS_KEY:
    description: 'Browserstack access key'
  DEPLOY:
    description: 'Whether to perform a deploy if necessary'
    default: false
  GITHUB_TOKEN:
    description: 'To bump the package.json version'
  NPM_TOKEN:
    description: 'To publish to npm'
runs:
  using: "composite"
  steps: 
    - run: |
        echo "Installing Dependencies"
        if [ -f "package-lock.json" ]; then
          echo "Running npm ci"
          npm ci
        else
          echo "Running npm i"
          npm i
        fi
      shell: bash
    - run: |
        echo "Building"
        npm build
      shell: bash
    - run: |
        echo "Linting"
        npm run lint
      shell: bash
    - run: |
        if [ ${{ inputs.RUN_LOCAL_TESTS }} == true ]; then
          echo "Running local tests"
          npm run test:local
        fi
      shell: bash
    - run: |
        if [ ${{ inputs.RUN_SAUCE_TESTS }} == true ]; then
          echo "Running sauce tests"
          npm run test:sauce
        fi
      env:
        SAUCE_USERNAME: ${{ inputs.SAUCE_USERNAME }}
        SAUCE_ACCESS_KEY: ${{ inputs.SAUCE_ACCESS_KEY }}
      shell: bash
    - run: |
        if [ ${{ inputs.RUN_BROWSERSTACK_TESTS }} == true ]; then
          echo "Running browserstack tests"
          npm run test:bs
        fi
      env:
        BROWSERSTACK_USERNAME: ${{ inputs.BROWSERSTACK_USERNAME }}
        BROWSERSTACK_ACCESS_KEY: ${{ inputs.BROWSERSTACK_ACCESS_KEY }}
      shell: bash
    - run: |
        if [ ${{ inputs.DEPLOY }} == true ]; then
          echo "Running semantic-release"
          npx semantic-release
        fi
      env:
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
        NPM_TOKEN: ${{ inputs.NPM_TOKEN }}
      shell: bash
